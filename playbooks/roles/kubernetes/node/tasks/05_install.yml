#######################################################
###################  Kubernetes Setup Nodes ###############
#######################################################
---
- name: Kube | Retrieve generated credentials
  include_role:
    name: kubernetes/common
    tasks_from: creds

- name: Kube | Copy join node cmd to nodes
  copy:
    src: 'files/join-node.sh'
    dest: '/etc/kubernetes/join-node.sh'
    mode: 0755

- name: Kube | Join Kubernetes cluster
  shell: '/etc/kubernetes/join-node.sh'

- name: Kube | Wait for Nodes to Register
  pause:
    seconds: 10

- name: Kube | Wait for Node to be ready
  include_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "node"
    namespace: ""
    resource_name: "{{ ansible_fqdn }}"
    label: ""

- name: Kube | Get kube-dns IP
  shell: "kubectl get svc -n kube-system | grep kube-dns | awk '{print $3}'"
  register: kube_dns_ip

# This task retrieves the connection name of the network device with the management IP designated
# in the inventory file
- name: Kube | Get network manager connection name
  shell: nmcli device show {{ item }} | grep GENERAL.CONNECTION | awk -F " " '{print $2}'
  register: nmcli_conn_name
  with_items: "{{ ansible_interfaces }}"
  when:
    - hostvars[inventory_hostname]['ansible_' + item] is defined
    - hostvars[inventory_hostname]['ansible_' + item].ipv4 is defined
    - hostvars[inventory_hostname]['ansible_' + item].ipv4.address == hostvars[inventory_hostname].management_ipv4

- name: Kube | Update DNS records for the management interface
  nmcli:
    conn_name: "{{ item.stdout }}"
    type: ethernet
    dns4:
      - "{{ kube_dns_ip.stdout }}"
      - "{{ ansible_controller_ip }}"
    state: present
  with_items: "{{ nmcli_conn_name.results }}"
  when: item.stdout is defined

- name: Kube | Insert kube-dns into /etc/resolv.conf
  lineinfile:
    insertbefore: BOF
    line: "nameserver {{ kube_dns_ip.stdout }}"
    path: /etc/resolv.conf

- name: Kube | Label sensors
  command: 'kubectl label nodes {{ ansible_fqdn }} role=sensor --overwrite=true'
  when: inventory_hostname in groups['sensors']

- name: Kube | Label secondary servers
  command: 'kubectl label nodes {{ ansible_fqdn }} role=server --overwrite=true'
  when: inventory_hostname in groups['servers']
  register: debug_output
